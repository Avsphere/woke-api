{"authors":[],"date_download":"2018-10-22 20:58:29","date_modify":"2018-10-22 20:58:29","date_publish":"2014-06-03 19:19:18","description":"Swift may also allow a whole new type of coder to build applications for devices running the iOS and Mac OS X operating system.","filename":"data/vaneerConsumption/WhyCodersAreGoingNutsOverSwiftApplesNewProgrammingLanguage.json","image_url":"https://media4.s-nbcnews.com/j/newscms/2014_23/484991/140603-craig-federighi-swift-jsw-248p_f99a639d9eff00868707b440279ce363.1200;630;7;70;5.jpg","language":"en","localpath":"/home/avsp_here/news-please-repo//data/2018/10/22/nbcnews.com/tech_internet_why-coders-are-going-nuts-over-swift-apples-new-programming-n121566_1540241909.html","title":"Why Coders Are Going Nuts Over Swift, Apple's New Programming Language","title_page":"Why Coders Are Going Nuts Over Swift, Apple's New Programming Language","title_rss":"NULL","source_domain":"nbcnews.com","text":"This is unlikely to harm Apple any time soon. In fact, the company prefers things this way. It insists on defining its own rules, and its devices are so widely used, it knows that large numbers of developers will happily build apps for them no matter what language this requires, driven by the enormous dollars signs they see in names like the iPhone and the Mac. But life would be even easier for these developers if they could build applications that instantly ran on all devices, from Android phones to iPads. We were already a long way from that, and now Apple has taken us even further away.\nBeyond Objective-C\nToday, most all Apple software is built with Objective-C. Originally designed in the 1980s and soon adopted by Next Computer–the Steve Jobs-led company whose technologies eventually morphed into the modern Mac and the iPhone–the language has ridden these devices to enormous popularity.1Based on the venerable C language–still the world’s most widely used–it feels familiar to many coders, and it lets you build code that runs rather fast.\nBut in many ways, Objective-C isn’t nearly as easy to use as more modern languages such as Ruby and Python. Generally, such “interpreted languages” let you develop software much quicker, handling many tasks in the background that you would otherwise have to handle on your own. Swift appears to change this.\nFor both Larson and Pollak, one of Swift’s biggest advantages over Objective-C is that it does what’s called “automatic garbage collection.” Basically, this means that it will automatically dispose of unneeded information that’s sitting in a machine’s memory, and the result is that developers won’t have to spend a lot of time and energy trying to deal with memory management on their own. This is the primary reason that Larson believes Swift can reach a much larger number of developers.\nSwift also offers “inferred typing,” which means that developers don’t have to spend as much time defining what types of variables they’re using. And the new language allows for concise “closures,” which basically means that it’s easier to build a small piece of code that can repeatedly collect information on behalf of your program. As with automatic garbage collection, both of these additions mean that Swift will “feel more modern,” that it will let developers build reliable software more quickly and with less hassle.\nThe Interactive Playground\nOn top of this, Apple has added the “interactive playground,” a way of viewing the results of a piece of code as you type it. Pollak says it reminds him of the work that ex-Apple designer Bret Victor has done with the Javascript language, trying to make it a more visual endeavor. And Larson compares it to the new Wolfram programming language designed by respected scientist and technologist Stephen Wolfram. Andrew Stone, an independent Apple developer living in New Mexico, calls it “absolutely amazing.”\nThis is the wild card. Depending how well it works, Pollak says, the playground could push mainstream programming in a new direction, providing a more intuitive means of building code. “This isn’t necessarily an Apple invention, but it is something that has been bubbling up over the last few years,” he explains.\nBut if you put the playground to one side, Swift isn’t really that different from many other languages. It’s mainly a way of bringing Apple’s platform up to par with languages like Ruby and Python–all without sacrificing the speed of Objective-C.\nThe Apple Way\nFor this reason, Pollak believes that, rather than building Swift, Apple should have embraced a language that already provides many of the same benefits, merging the Apple world world with modern tools that are already used by an enormous community of developers. “They’d be much better off moving Ruby to their platform — or Python,” he says.\nBut Apple is pretty much behaving as you’d expect. It appears that Swift is an extension of Objective-C–a language the company has spent years refining–and it builds atop the LLVM language compiler, an extremely powerful tool that Apple has used to shape its C-based tools in more recent times. The company is working with what is already in place.\nBut beyond that, as Andrew Stone points out, Apple is a company that very much believes in building things on its own–in what it sees as the right way–rather than waiting for the outside world to create some kind of standard platform that everyone can use. The company once embraced the popular Java programming language–now use to build apps on Android devices–but it ditched Java long ago in favor of its home grown platform. Swift is the most natural expression of the Apple Way–and that’s another reason developers went nuts at the keynote.\nThe question is how many people will not only cheer for it, but actually use the thing. Apple has tried to make this as easy as possible. The company’s new developer tools let you use Swift alongside Objective-C. But a keynote presentation does not a language make, and coders like Larson and Stone aren’t yet sure if it’s the way to go. “I’ve been using Objective-C for 25 years, so we’ll see,” Stone says. “I love playing with new things. But is it right for me?”\n— Cade Metz, Wired\nMore from Wired:\nHow the NSA Could Bug Your Powered-Off Phone, and How to Stop Them\nApple’s 12 Best iOS 8 Features and Upgrades\n30 Years After Chernobyl's Meltdown, Gripping Photos Expose the Human Fallout\nThe Mystery of Go, the Ancient Game That Computers Still Can’t Win","url":"https://www.nbcnews.com/tech/internet/why-coders-are-going-nuts-over-swift-apples-new-programming-n121566"}
